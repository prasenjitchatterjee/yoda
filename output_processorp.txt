from flask import Flask, request, render_template, session, redirect,jsonify
import matplotlib
matplotlib. use('Agg')
import matplotlib.pyplot as plt 
import io
from io import BytesIO 
import base64

app = Flask(__name__)
app.static_folder = 'static'

def process_table(df):
    return render_template( 'table.html', tables=[df.to_html (classes='data', index=False)], titles=df.columns.values)
    # x = df.to_json(orient='records')
    # print(x)
    # return render_template("table2.html", table_data=df.to_json(orient='records'))


def process_prompts(prompts=[]):
    if prompts==[] :
        prompts = [
        "table", 
        "hello"]
    print(prompts)
    # return render_template( 'table2.html', tables=[df.to_html (classes='data', index=False)], titles=df.columns.values)
    return render_template("prompts.html", prompts=prompts)


def process_chart():
    from sankeyflow import Sankey
    import matplotlib.pyplot as plt

    plt.figure(figsize=(20, 10), dpi=144)

    # flows = [
    #     ('Product', 'Total revenue', 20779),
    #     ('Sevice\nand other', 'Total revenue', 30949),
    #     ('Total revenue', 'Gross margin', 34768),
    #     ('Total revenue','Cost of revenue', 16960),
    #     ('Gross margin', 'Operating income', 22247),
    #     ('Operating income', 'Income before\nincome taxes', 22247, {'flow _color_mode': 'dest'}),
    #     ('Other income, net', 'Income before\nincome taxes', 268),
    #     ('Gross margin', 'Research and\ndevelopment', 5758),
    #     ('Gross margin''Sales and marketing', 5379),
    #     ('Gross margin', 'General and\nadministrative', 1384),
    #     ('Income before\nincome taxes', 'Net income', 18765),
    #     ('Income before\nincome taxes', 'Provision for\nincome taxes', 3750),
    # ]

    flows = [
        ('Product', 'Total revenue', 20779),
        ('Sevice\nand other', 'Total revenue', 30949),
        ('Total revenue', 'Gross margin', 34768),
        ('Total revenue', 'Cost of revenue', 16960),
        ('Gross margin', 'Operating income', 22247),
        ('Operating income', 'Income before\nincome taxes', 22247, {'flow_color_mode': 'dest'}),
        ('Other income, net', 'Income before\nincome taxes', 268),
        ('Gross margin', 'Research and\ndevelopment', 5758), 
        ('Gross margin', 'Sales and marketing', 5379), 
        ('Gross margin', 'General and\nadministrative', 1384),
        ('Income before\nincome taxes', 'Net income', 18765), 
        ('Income before\nincome taxes', 'Provision for\nincome taxes', 3750),
    ]

    s = Sankey(flows=flows, flow_color_mode='lesser')
    s.draw()
    plt.show()
    plt.close()

    buf = io.BytesIO()
    plt.savefig(buf, format='png')
    buf. seek(0)
    plt.savefig(buf, dpi=250, format="png")

    plot_url = base64.b64encode(buf.getvalue()).decode('utf8')

    return render_template('plot.html', plot_url=plot_url)
